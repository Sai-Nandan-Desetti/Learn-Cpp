Bitwise Rotate Left

Given:
     - a binary number
        - containing 4 bits
        - represented as bitset<4>

To do:
    - compute its left rotation without using test() and set() from bitset
    - Use bitwise operators

Example:
    rotl(1001) -> 0011


std::bistset<4> rotl(std::bitset<4> bits):
    // - Left-shift by 1 bit
    // - bits.set(bits[3]) 
    // using this array-like indexing isn't allowed (by the question, C++ allows it)
    - (bits << 1) | (bits >> 3)

IMPORTANT: We count from right to left; starting from 0.
